/* tslint:disable */
/* eslint-disable */
/**
 * OpenAPI definition
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: v0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CityBean,
    CityBeanFromJSON,
    CityBeanFromJSONTyped,
    CityBeanToJSON,
    ProvinceBean,
    ProvinceBeanFromJSON,
    ProvinceBeanFromJSONTyped,
    ProvinceBeanToJSON,
    StreetBean,
    StreetBeanFromJSON,
    StreetBeanFromJSONTyped,
    StreetBeanToJSON,
    TownBean,
    TownBeanFromJSON,
    TownBeanFromJSONTyped,
    TownBeanToJSON,
} from './';

/**
 * 
 * @export
 * @interface PostAddrBean
 */
export interface PostAddrBean {
    /**
     * 
     * @type {ProvinceBean}
     * @memberof PostAddrBean
     */
    province?: ProvinceBean;
    /**
     * 
     * @type {CityBean}
     * @memberof PostAddrBean
     */
    city?: CityBean;
    /**
     * 
     * @type {TownBean}
     * @memberof PostAddrBean
     */
    town?: TownBean;
    /**
     * 
     * @type {StreetBean}
     * @memberof PostAddrBean
     */
    street?: StreetBean;
    /**
     * 
     * @type {string}
     * @memberof PostAddrBean
     */
    detail?: string;
}

export function PostAddrBeanFromJSON(json: any): PostAddrBean {
    return PostAddrBeanFromJSONTyped(json, false);
}

export function PostAddrBeanFromJSONTyped(json: any, ignoreDiscriminator: boolean): PostAddrBean {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'province': !exists(json, 'province') ? undefined : ProvinceBeanFromJSON(json['province']),
        'city': !exists(json, 'city') ? undefined : CityBeanFromJSON(json['city']),
        'town': !exists(json, 'town') ? undefined : TownBeanFromJSON(json['town']),
        'street': !exists(json, 'street') ? undefined : StreetBeanFromJSON(json['street']),
        'detail': !exists(json, 'detail') ? undefined : json['detail'],
    };
}

export function PostAddrBeanToJSON(value?: PostAddrBean | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'province': ProvinceBeanToJSON(value.province),
        'city': CityBeanToJSON(value.city),
        'town': TownBeanToJSON(value.town),
        'street': StreetBeanToJSON(value.street),
        'detail': value.detail,
    };
}


